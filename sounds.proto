syntax = "proto3";

package epidemic;

option go_package = "github.com/epidemicsound/grpc-eval/epidemic";

import "duration.proto";
import "uuid.proto";

enum Role {
    ROLE_UNSPECIFIED = 0;
    VOCALIST = 1;
    PRODUCER = 2;
}

message Credit {
    // this identifies the user that
    oneof artist {
        string name = 1;
        UUID id = 2;
    }
    repeated Role roles = 3;
}

// This is probably a way to simple model, potentially we can create a very
// long enum with aliases (different name same value).
enum Genre {
    // rebuild
    GENRE_UNSPECIFIED = 0;
    ROCK = 1;
    HIPHOP = 2;
    AMBIENT = 3;
}

message Sound {
    UUID id = 1;
    string title = 2;
    int32 bpm = 3;
    google.protobuf.Duration duration = 4;
    repeated Genre genres = 5;
}

message ListSoundsRequest {}

message ListSoundsResponse {
    repeated Sound sounds = 1;
}

message CreateSoundsRequest {
    // TODO(dape): idempotency?
    repeated Sound sounds = 1;
}

message CreateSoundsResponse {}

message RecommendSoundsRequest {}

message RecommendSoundsResponse {
    repeated Sound sounds = 1;
}

service SoundsService {
    rpc List(ListSoundsRequest) returns (ListSoundsResponse);
    rpc Create(CreateSoundsRequest) returns (CreateSoundsResponse);
    rpc Recommend(RecommendSoundsRequest) returns (RecommendSoundsResponse);
}
